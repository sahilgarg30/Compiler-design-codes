<program>				:		<moduleDeclarations> <otherModules> <driverModule> <otherModules>
<moduleDeclarations>	:		<moduleDeclaration> <moduleDeclarations>
<moduleDeclarations>	:		EMPTY
<moduleDeclaration>		:		DECLARE MODULE ID SEMICOL
<otherModules>			:		<module> <otherModules>
<otherModules>			:		EMPTY
<driverModule>			:		DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef>
<module>				:		DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef>
<ret>					:		RETURNS SQBO <output_plist> SQBC SEMICOL
<ret>					:		EMPTY
<input_plist>			:		ID COLON <dataType> <input_plistRec>
<input_plistRec>		:		COMMA ID COLON <dataType> <input_plistRec>
<input_plistRec>		:		EMPTY
<output_plist>			:		ID COLON <type> <output_plistRec>
<output_plistRec>		:		COMMA ID COLON <type> <output_plistRec>
<output_plistRec>		:		EMPTY
<type>					:		INTEGER
<type>					:		REAL
<type>					:		BOOLEAN
<dataType>				:		<type>
<dataType>				:		ARRAY SQBO <range> SQBC OF <type>
<moduleDef>				:		START <statements> END
<statements>			:		<statement> <statements>
<statements>			:		EMPTY
<statement>				:		<ioStmt>
<statement>				:		<simpleStmt>
<statement>				:		<declareStmt>
<statement>				:		<condionalStmt>
<statement>				:		<iterativeStmt>
<statement>				:		SEMICOL
<ioStmt>				:		GET_VALUE BO ID <whichId> BC SEMICOL
<ioStmt>				:		PRINT BO <var> BC SEMICOL
<whichId>				:		SQBO <index> SQBC
<whichId>				:		EMPTY
<index>					:		NUM
<index>					:		ID
<simpleStmt>			:		<assignmentStmt>
<simpleStmt>			:		<moduleReuseStmt>
<assignmentStmt>		:		ID <whichId> ASSIGNOP <expression> SEMICOL
<moduleReuseStmt>		:		<optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional>				:		SQBO <idList> SQBC ASSIGNOP
<optional>				:		EMPTY
<idList>				:		ID <idListRec>
<idListRec>				:		COMMA ID <idListRec>
<idListRec>				:		EMPTY
<expression>			:		<arithOrBoolExpr>
<expression>			:		MINUS BO <arithmeticExpr> BC
<arithOrBoolExpr> 		: 		<anyTerm> <arithOrBoolExprRec>
<arithOrBoolExprRec> 	:		<logicalOp> <anyTerm> <arithOrBoolExprRec>
<arithOrBoolExprRec> 	:		EMPTY
<anyTerm> 				:		<arithmeticExpr> <anyTermRec>
<anyTermRec> 			:		<relationalOp> <arithmeticExpr> <anyTermRec>
<anyTermRec> 			:		EMPTY
<arithmeticExpr>		:		<term> <arithmeticExprRec>
<arithmeticExprRec>		:		<pm> <term> <arithmeticExprRec>
<arithmeticExprRec>		:		EMPTY 
<term>					:		<factor> <termRec>
<termRec>				:		<md> <factor> <termRec>
<termRec>				:		EMPTY


<factor>				:		BO <arithOrBoolExpr> BC
<factor>				:		<var>
<var>					:		ID <whichId>
<var>					:		NUM
<var>					:		RNUM
<var>					:		TRUE
<var>					:		FALSE
<pm>					:		PLUS
<pm>					:		MINUS
<md>					:		MUL
<md>					:		DIV
<logicalOp>				:		AND
<logicalOp>				:		OR
<relationalOp>			:		LT
<relationalOp>			:		LE
<relationalOp>			:		GT
<relationalOp>			:		GE
<relationalOp>			:		EQ
<relationalOp>			:		NE
<declareStmt>			:		DECLARE <idList> COLON <dataType> SEMICOL
<condionalStmt>			:		SWITCH BO ID BC START <caseStmts> <default> END
<caseStmts>				:		CASE <value> COLON <statements> BREAK SEMICOL <caseStmtsRec>
<caseStmtsRec>			:		CASE <value> COLON <statements> BREAK SEMICOL <caseStmtsRec>
<caseStmtsRec>			:		EMPTY
<value>					:		NUM
<value>					:		TRUE
<value>					:		FALSE
<default>				:		DEFAULT COLON <statements> BREAK SEMICOL
<default>				:		EMPTY
<iterativeStmt>			:		FOR BO ID IN <range> BC START <statements> END
<iterativeStmt>			:		WHILE BO <arithOrBoolExpr> BC START <statements> END
<range>					:		NUM RANGEOP NUM